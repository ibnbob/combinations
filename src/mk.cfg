include mk.def

LIBDIR = @LIBDIR@
HDRDIR = @HDRDIR@

MKO = ../mk.obj

CFLAGSO	   = ${CFLAGSL} -O3 -DNDEBUG
CFLAGSG	   = ${CFLAGSL} -g
CFLAGSGO   = ${CFLAGSL} -g -O3
CFLAGSP    = ${CFLAGSL} -pg -O3
CFLAGSGC   = ${CFLAGSL} -g -O0 --coverage -fno-default-inline -fno-elide-constructors -DNDEBUG

LIB-O	= lib$(LIB).a
LIB-G	= lib$(LIB)-g.a
LIB-GO	= lib$(LIB)-go.a
LIB-P  	= lib$(LIB)-p.a
LIB-GC	= lib$(LIB)-gc.a

EXE-G   = $(EXE)-g
EXE-GO  = $(EXE)-go
EXE-P  	= $(EXE)-p
EXE-GC  = $(EXE)-gc

.PHONY: exec opt exec-g debug exec-go debug-opt opt-debug exec-p perf exec-gc cov
exec opt:
	@mkdir -p .obj
	make -f $(MKO) -C .obj CFLAGS="$(CFLAGSO)" EXE=$(EXE) exec

exec-g debug:
	@mkdir -p .obj-g
	make -f $(MKO) -C .obj-g CFLAGS="$(CFLAGSG)" EXE=$(EXE-G) exec

exec-go debug-opt opt-debug:
	@mkdir -p .obj-go
	make -f $(MKO) -C .obj-go CFLAGS="$(CFLAGSGO)" EXE=$(EXE-GO) exec
exec-p perf:
	@mkdir -p .obj-p
	make -f $(MKO) -C .obj-p CFLAGS="$(CFLAGSP)" EXE=$(EXE-P) exec

exec-gc cov:
	@mkdir -p .obj-gc
	make -f $(MKO) -C .obj-gc CFLAGS="$(CFLAGSGC)" EXE=$(EXE-GC) exec

.PHONY: basic
basic: clean opt debug

.PHONY: export clean distclean
export:
	@mkdir -p $(HDRDIR)
	@for hdr in $(EXPORT); do \
	  ln -fs $$(pwd)/$${hdr} $(HDRDIR); \
	done

clean:
	@rm -f $(EXE) $(EXE)-* *~
	@rm -rf .obj*
	@rm -f $(LIBDIR)/lib$(LIB)*.a
	@rm -f *~

distclean: clean
	@rm -rf .d   
	@rm -rf makefile
